[buildout]
extends = base.cfg ../versions/production.cfg
find-links += pypi-local/
parts +=
    env
    mod_wsgi
    nginx.conf
    apache.conf
    gunicorn
    supervisor
    solr
    solr-download
    solr-update
eggs +=
    pylibmc
    gunicorn

[settings]
domain = penelope.com
projectname = YourPenelope

[penelope]
db_echo = false

[env]
recipe = gocept.recipe.env

[ports]
nginx = 80
pyramid1 = 8081
pyramid2 = 8082
apache_svn = 8083

[hosts]
nginx = 0.0.0.0
apache_svn = 127.0.0.1
pyramid1 = 127.0.0.1
pyramid2 = 127.0.0.1

[nginx.conf]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf

[apache]
user = www-data

[apache.conf]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/apache.conf.in
output = ${buildout:directory}/etc/apache.conf

[supervisor]
recipe = collective.recipe.supervisor
http-socket = unix
user = admin
password = admin
file = ${buildout:directory}/var/supervisor.sock
supervisord-user =
programs =
    20 gunicorn ${buildout:directory}/bin/gunicorn [-b ${hosts:pyramid1}:${ports:pyramid1} --workers=2 --timeout=60 --access-logfile=${buildout:directory}/var/log/gunicorn1.log --error-logfile=${buildout:directory}/var/log/error-gunicorn1.log wsgi:application] ${buildout:directory}
    20 gunicorn_socketio ${buildout:directory}/bin/gunicorn [-b ${hosts:pyramid2}:${ports:pyramid2} --workers=1 --access-logfile=${buildout:directory}/var/log/gunicorn2.log --error-logfile=${buildout:directory}/var/log/error-gunicorn2.log --worker-class socketio.sgunicorn.NginxGeventSocketIOWorker wsgi:application] ${buildout:directory}
    30 solr ${buildout:directory}/bin/solr-instance [fg]

[gunicorn]
recipe = zc.recipe.egg
scripts = gunicorn
eggs = ${buildout:eggs}
initialization =
    import os
    os.environ['PYTHONPATH'] = '' #because js.lesscss is broken
    os.environ['LESSC'] = '${buildout:directory}/parts/node/lib/node_modules/less'
    os.environ['LC_ALL'] = 'en_US.utf8'

[mod_wsgi]
recipe = collective.recipe.modwsgi
eggs = 
    ${buildout:eggs}
    PasteDeploy
    Paste
    python-cjson
    nose
    plone.i18n
    ordereddict
    Unidecode
config-file = ${buildout:directory}/etc/production.ini
app_name = main
